<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.alfresco.maven</groupId>
    <artifactId>alfresco-sdk-parent</artifactId>
    <version>1.0.1</version>
  </parent>

  <groupId>com.redpill-linpro.alfresco</groupId>
  <artifactId>alfresco-base</artifactId>
  <version>1.0.1.4</version>
  <packaging>pom</packaging>
  
  <name>Redpill Linpro Alfresco Parent POM</name>
  <description>The Parent POM for all RLP based Alfresco projects</description>

  <!-- | SDK properties have sensible defaults in the SDK parent, | but you can override the properties below to use another version. | For more available properties see the alfresco-sdk-parent POM. -->
  <properties>
    <alfresco.groupId>org.alfresco.enterprise</alfresco.groupId>
    <alfresco.version>4.1.4</alfresco.version>
    <app.log.root.level>WARN</app.log.root.level>
    <alfresco.data.location>alf_data_dev</alfresco.data.location>
    <!-- Defines the target WAR for this AMP. Allowed values: alfresco | share -->
    <!-- Defaults to a repository AMP -->
    <alfresco.client.war>alfresco</alfresco.client.war>
    <!-- This controls which properties will be picked in src/test/properties for embedded run -->
    <env>local</env>
    <tomcat.host>localhost</tomcat.host>
    <tomcat.port>8080</tomcat.port>
  </properties>

  <developers>
    <developer>
      <id>marcus.svensson</id>
      <name>Marcus Svensson</name>
      <email>marcus.svensson (at) redpill-linpro.com</email>
      <organization>Redpill Linpro AB</organization>
      <organizationUrl>http://www.redpill-linpro.com</organizationUrl>
      <roles>
        <role>Founder</role>
        <role>Architect</role>
        <role>Developer</role>
      </roles>
      <timezone>+1</timezone>
    </developer>
    <developer>
      <id>niklas.ekman</id>
      <name>Niklas Ekman</name>
      <email>niklas.ekman (at) redpill-linpro.com</email>
      <organization>Redpill Linpro AB</organization>
      <organizationUrl>http://www.redpill-linpro.com</organizationUrl>
      <roles>
        <role>Architect</role>
        <role>Developer</role>
      </roles>
      <timezone>+1</timezone>
    </developer>
  </developers>

  <contributors>
    <contributor />
  </contributors>

  <scm>
    <connection>scm:git:git://git.redpill-linpro.com/alfresco-common/alfresco-base</connection>
    <developerConnection>scm:git:git://git.redpill-linpro.com/alfresco-common/alfresco-base</developerConnection>
    <url>scm:git:git://git.redpill-linpro.com/alfresco-common/alfresco-base</url>
  </scm>

  <issueManagement>
    <system>Git</system>
    <url>https://localhost/issues</url>
  </issueManagement>

  <repositories>
    <repository>
      <id>redpill-linpro-public</id>
      <url>http://javadev.redpill-linpro.com/nexus/content/groups/public</url>
    </repository>
    <repository>
      <id>redpill-linpro-snapshots</id>
      <url>http://javadev.redpill-linpro.com/nexus/content/groups/public-snapshots</url>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
      </snapshots>
    </repository>
    <repository>
      <id>alfresco-private</id>
      <url>http://javadev.redpill-linpro.com/nexus/content/repositories/Alfresco_artifacts</url>
    </repository>
    <repository>
      <id>alfresco-private-snapshots</id>
      <url>http://javadev.redpill-linpro.com/nexus/content/repositories/Alfresco_artifacts</url>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
      </snapshots>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>redpill-linpro-public</id>
      <url>http://javadev.redpill-linpro.com/nexus/content/groups/public</url>
    </pluginRepository>
    <pluginRepository>
      <id>redpill-linpro-public-snapshots</id>
      <url>http://javadev.redpill-linpro.com/nexus/content/groups/public-snapshots</url>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>

  <!-- Following dependencies are needed for compiling Java code in src/main/java; <scope>provided</scope> is inherited for each of the following; for more info, please refer to alfresco-platform-distribution 
    POM -->
  <dependencies>
    <!-- Workaround ticket: 15024-63464 -->
    <dependency>
      <groupId>${alfresco.groupId}</groupId>
      <artifactId>alfresco-enterprise-repository</artifactId>
      <version>${alfresco.version}</version>
      <scope>provided</scope>
    </dependency>
    <!-- <dependency> <groupId>${alfresco.groupId}</groupId> <artifactId>alfresco-web-client</artifactId> <version>${alfresco.version}</version> <scope>provided</scope> </dependency> -->
    <!-- Test dependencies -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <!-- Here we realize the connection with the Alfresco selected platform (e.g.version and edition) -->
  <dependencyManagement>
    <dependencies>
      <!-- This will import the dependencyManagement for all artifacts in the selected Alfresco version/edition (see http://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Importing_Dependencies) 
        NOTE: You still need to define dependencies in your POM, but you can omit version as it's enforced by this dependencyManagement. NOTE: It defaults to the latest version this SDK pom has been tested with, 
        but alfresco version can/should be overridden in your project's pom -->
      <dependency>
        <groupId>${alfresco.groupId}</groupId>
        <artifactId>alfresco-platform-distribution</artifactId>
        <version>${alfresco.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.11</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.jmock</groupId>
        <artifactId>jmock</artifactId>
        <version>2.6.0</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.jmock</groupId>
        <artifactId>jmock-legacy</artifactId>
        <version>2.6.0</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.jmock</groupId>
        <artifactId>jmock-junit4</artifactId>
        <version>2.6.0</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <finalName>${project.artifactId}-${project.version}</finalName>
    <plugins>
      <!-- Override surefire configuration to allow for integration testing -->
      <!-- <plugin> <artifactId>maven-surefire-plugin</artifactId> <configuration> <excludes> <exclude>**/IntTest*.java</exclude> </excludes> </configuration> </plugin> -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>**/*IntegrationTest.java</exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <id>surefire-it</id>
            <phase>integration-test</phase>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <excludes>
                <exclude>none</exclude>
              </excludes>
              <includes>
                <include>**/*IntegrationTest.java</include>
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>yuicompressor-maven-plugin</artifactId>
        <version>1.3.2</version>
        <executions>
          <execution>
            <id>minimize-javascript</id>
            <goals>
              <goal>compress</goal>
            </goals>
            <configuration>
              <excludes>
                <exclude>${project.basedir}/src/main/amp/config/**/*.js</exclude>
                <exclude>${project.build.directory}/**/*.js</exclude>
                <exclude>**/target/**</exclude>
                <exclude>**/*-min.js</exclude>
                <exclude>**/*-min.css</exclude>
                <exclude>**/WEB-INF/**</exclude>
                <exclude>**/tiny_mce/**</exclude>
                <exclude>**/log4javascript*.js</exclude>
              </excludes>
              <webappDirectory>${project.build.directory}/${project.build.finalName}/web</webappDirectory>
              <force>true</force>
              <statistics>false</statistics>
              <jswarn>false</jswarn>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <preProcessAggregates>true</preProcessAggregates>
        </configuration>
      </plugin>
    </plugins>

    <pluginManagement>
      <plugins>
        <!-- also clean out local jar file in tomcat -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>2.5</version>
          <configuration>
            <filesets>
              <fileset>
                <directory>${tomcat.home}/shared/classes/alfresco/module/${project.artifactId}</directory>
              </fileset>
              <fileset>
                <directory>${tomcat.home}/webapps/${alfresco.client.war}/WEB-INF/lib</directory>
                <includes>
                  <include>${project.build.finalName}.jar</include>
                </includes>
              </fileset>
            </filesets>
          </configuration>
        </plugin>
        
        <!-- Copy dependency jar files to local tomcat -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.6</version>
          <executions>
            <execution>
              <id>hot-copy-dependencies</id>
              <goals>
                <goal>copy-dependencies</goal>
              </goals>
              <configuration>
                <outputDirectory>${tomcat.home}/webapps/${alfresco.client.war}/WEB-INF/lib</outputDirectory>
                <overWriteReleases>false</overWriteReleases>
                <overWriteSnapshots>false</overWriteSnapshots>
                <overWriteIfNewer>true</overWriteIfNewer>
                <includeScope>runtime</includeScope>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.5</version>
          <executions>
            <execution>
              <id>hot-copy-resources</id>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <configuration>
                <outputDirectory>${tomcat.home}/webapps/${alfresco.client.war}/WEB-INF/lib</outputDirectory>
                <resources>
                  <resource>
                    <directory>${project.build.directory}/${project.build.finalName}/lib</directory>
                    <includes>
                      <include>${project.build.finalName}.jar</include>
                    </includes>
                  </resource>
                </resources>
              </configuration>
            </execution>

            <execution>
              <id>hot-copy-web-resources</id>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <configuration>
                <outputDirectory>${tomcat.home}/webapps/${alfresco.client.war}</outputDirectory>
                <resources>
                  <resource>
                    <directory>src/main/amp/web</directory>
                  </resource>
                  <resource>
                    <directory>${project.build.directory}/${project.build.finalName}/web</directory>
                    <includes>
                      <include>**/*.*</include>
                    </includes>
                  </resource>
                </resources>
              </configuration>
            </execution>

            <execution>
              <id>hot-copy-config-resources</id>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <configuration>
                <outputDirectory>${tomcat.home}/shared/classes/alfresco</outputDirectory>
                <resources>
                  <resource>
                    <directory>src/main/amp/config/alfresco</directory>
                    <includes>
                      <include>**/*</include>
                    </includes>
                  </resource>
                </resources>
              </configuration>
            </execution>

            <execution>
              <id>hot-copy-jrebel-config</id>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <configuration>
                <outputDirectory>${tomcat.home}/webapps/${alfresco.client.war}/WEB-INF/classes</outputDirectory>
                <resources>
                  <resource>
                    <directory>${project.build.directory}/classes</directory>
                    <includes>
                      <include>rebel.xml</include>
                    </includes>
                  </resource>
                </resources>
              </configuration>
            </execution>
          </executions>

          <configuration>
            <overwrite>true</overwrite>
          </configuration>
        </plugin>

        <plugin>
          <groupId>com.redpill-linpro.alfresco</groupId>
          <artifactId>maven-refresh-webscripts-plugin</artifactId>
          <version>1.0.0</version>
        </plugin>

        <plugin>
          <groupId>org.zeroturnaround</groupId>
          <artifactId>jrebel-maven-plugin</artifactId>
          <version>1.1.3</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>dev</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-clean-plugin</artifactId>
          </plugin>

          <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>hot-copy-dependencies</id>
              </execution>
            </executions>
          </plugin>
          
          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
              <execution>
                <id>hot-copy-resources</id>
                <phase>package</phase>
              </execution>
              <execution>
                <id>hot-copy-web-resources</id>
                <phase>package</phase>
              </execution>
              <execution>
                <id>hot-copy-config-resources</id>
                <phase>package</phase>
              </execution>
              <execution>
                <id>hot-copy-jrebel-config</id>
                <phase>package</phase>
              </execution>
            </executions>
          </plugin>
          
          <plugin>
            <groupId>org.zeroturnaround</groupId>
            <artifactId>jrebel-maven-plugin</artifactId>
          </plugin>
          
          <plugin>
            <groupId>com.redpill-linpro.alfresco</groupId>
            <artifactId>maven-refresh-webscripts-plugin</artifactId>
            <executions>
              <execution>
                <id>webscripts</id>
                <phase>package</phase>
                <goals>
                  <goal>refresh</goal>
                </goals>
                <configuration>
                  <url>http://${tomcat.host}:${tomcat.port}/${alfresco.client.war}/service/</url>
                  <password>admin</password>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Enable AMP project packing on a WAR and run embedded in Jetty -->
    <profile>
      <id>my-test123</id>
      <build>
        <plugins>
          <!-- Override surefire configuration to allow for integration testing -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${maven.surefire.version}</version>
            <executions>
              <execution>
                <id>surefire-it</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <excludes>
                    <exclude>none</exclude>
                  </excludes>
                  <includes>
                    <include>**/IntTest*.java</include>
                  </includes>
                </configuration>
              </execution>
            </executions>

            <configuration>
              <!-- <argLine>${app.testing.jvm.args}</argLine> -->
              <additionalClasspathElements>
                <!-- Adds the previously built ${app.amp.test.output.folder} to test classpath to enable module installation at test time -->
                <additionalClasspathElement>${app.amp.test.output.folder}</additionalClasspathElement>
                <additionalClasspathElement>${alfresco.client.war.folder}/WEB-INF/classes</additionalClasspathElement>
              </additionalClasspathElements>
            </configuration>
          </plugin>

          <!-- Fetch and unpack Alfresco Repository / Share in the target / folder -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-alfresco</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <outputDirectory>${alfresco.client.war.folder}</outputDirectory>
                  <artifactItems>
                    <artifactItem>
                      <groupId>${alfresco.groupId}</groupId>
                      <artifactId>${alfresco.client.war}</artifactId>
                      <type>war</type>
                      <version>${alfresco.version}</version>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          
          <!-- When the AMP runs locally, src/test/webapp and src/test/resources will contain -->
          <!-- the location of the configuration files -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-alfresco-test-resources</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${alfresco.client.war.folder}</outputDirectory>
                  <resources>
                    <resource>
                      <directory>src/test/webapp</directory>
                    </resource>
                    <resource>
                      <directory>${project.build.testOutputDirectory}</directory>
                      <targetPath>WEB-INF/classes</targetPath>
                      <filtering>${app.filtering.enabled}</filtering>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          
          <!-- The current AMP artifact is installed into the Alfresco folder using alfresco-maven-plugin -->
          <plugin>
            <groupId>org.alfresco.maven.plugin</groupId>
            <artifactId>alfresco-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>amps-to-war-overlay</id>
                <phase>package</phase>
                <goals>
                  <goal>install</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          
          <!-- If the integration-test phase is called, the integrated WAR + AMP is actually ran in Jetty -->
          <plugin>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>maven-jetty-plugin</artifactId>
            <executions>
              <execution>
                <id>start-jetty</id>
                <goals>
                  <goal>run-exploded</goal>
                </goals>
                <phase>pre-integration-test</phase>
                <configuration>

                  <daemon>true</daemon>
                  <webApp>${alfresco.client.war.folder}</webApp>
                </configuration>
              </execution>
              <execution>
                <id>stop-jetty</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <stopPort>9991</stopPort>
              <stopKey>test</stopKey>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>upload</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.redpill-linpro.alfresco</groupId>
            <artifactId>artifact-upload-plugin</artifactId>
            <version>1.0.0</version>
            <executions>
              <execution>
                <id>artifact-upload</id>
                <phase>install</phase>
                <goals>
                  <goal>upload</goal>
                </goals>
                <inherited>true</inherited>
              </execution>
            </executions>
            <configuration>
              <username>${artifact-upload.username}</username>
              <password>${artifact-upload.password}</password>
              <site>${artifact-upload.site}</site>
              <url>${artifact-upload.cmis.url}</url>
              <path>${artifact-upload.client.upload.path}</path>
              <overwrite>true</overwrite>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <distributionManagement>
    <repository>
      <id>redpill-linpro-releases</id>
      <url>http://javadev.redpill-linpro.com/nexus/content/repositories/releases</url>
    </repository>
    <snapshotRepository>
      <id>redpill-linpro-snapshots</id>
      <url>http://javadev.redpill-linpro.com/nexus/content/repositories/snapshots</url>
    </snapshotRepository>
  </distributionManagement>

</project>
