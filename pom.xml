<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>com.redpill-linpro.alfresco</groupId>
  <artifactId>alfresco-base</artifactId>
  <version>3.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Redpill Linpro Alfresco Parent POM</name>
  <description>The Parent POM for all RLP based Alfresco projects</description>

  <!-- | SDK properties have sensible defaults in the SDK parent, | but you can override the properties below to use another version. | For more available properties see the alfresco-sdk-parent POM. -->
  <properties>
    <tomcat.host>localhost</tomcat.host>
    <tomcat.port>8080</tomcat.port>
    <maven.failsafe.version>2.19.1</maven.failsafe.version>
    <maven.surefire.version>2.19.1</maven.surefire.version>
    <maven.cargo.version>1.4.14</maven.cargo.version>
    <maven-resources-plugin.version>3.0.1</maven-resources-plugin.version>
    <h2.version>1.4.193</h2.version>
    <failsafe.argLine />
    <jacoco.agent.arg />
    
    <alfresco.db.name>alf_dev</alfresco.db.name>
    <alfresco.db.username>alfresco</alfresco.db.username>
    <alfresco.db.password>alfresco</alfresco.db.password>
    <alfresco.db.params>AUTO_SERVER=TRUE;DB_CLOSE_ON_EXIT=FALSE;LOCK_TIMEOUT=10000;MVCC=FALSE;LOCK_MODE=0</alfresco.db.params>
    <alfresco.db.url>jdbc:h2:${alfresco.data.location}/h2_data/${alfresco.db.name};${alfresco.db.params}</alfresco.db.url>
    <alfresco.db.datasource.class>org.h2.jdbcx.JdbcDataSource</alfresco.db.datasource.class>
    
    <!-- Below is the required properties from the Alfresco SDK -->
    <!-- Leaving them out works fine locally but does not when jenkins is used to build -->
    <!-- Alfresco Maven Plugin version to use -->
    <alfresco.sdk.version>3.0.0-beta-5</alfresco.sdk.version>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <!-- Alfresco Data directory, which will contain:
    Content Store (i.e. the files we upload)
    Database (i.e. the metadata for the uploaded files)
    Search index (i.e. the indexed content and metadata)
   Configured in alfresco-global.properties with the 'dir.root' property.
    -->
    <alfresco.data.location>${project.build.directory}/alf_data_dev</alfresco.data.location>

    <!-- Duplicated with alfresco.solrHome in the plugin, we need them out here to do filtering -->
    <solr.home>${alfresco.data.location}/solr</solr.home>
    <solr.model.dir>${solr.home}/alfrescoModels</solr.model.dir>
    <solr.content.dir>${solr.home}/index</solr.content.dir>

    <!-- Properties used in dependency declarations, you don't need to change these -->
    <alfresco.groupId>org.alfresco</alfresco.groupId>
    <alfresco.share.war.artifactId>share</alfresco.share.war.artifactId>
    <!-- Platform WAR artifact, change to 'alfresco-enterprise' if using Enterprise Edition -->
    <alfresco.platform.war.artifactId>alfresco-platform</alfresco.platform.war.artifactId>

    <!-- Alfresco Platform and Share webapp versions, these are the original Alfresco webapps that will be
    customized and then deployed and run by the tomcat maven plugin when
    executing for example $ mvn clean install alfresco:run -->
    <alfresco.platform.version>5.2.c-EA</alfresco.platform.version>
    <alfresco.share.version>5.2.b-EA</alfresco.share.version>

    <!-- Alfresco Surf version, if you change Share version you might need to change Surf version -->
    <alfresco.surf.version>6.10</alfresco.surf.version>

    <!-- Aikau framework version, it is released separately, so it can be useful to be able
    to bring in newer versions with bug fixes etc -->
    <aikau.version>1.0.93</aikau.version>

    <!-- JRebel Hot reloading of classpath stuff and web resource stuff -->
    <jrebel.version>1.1.6</jrebel.version>

    <!-- Environment to use, Alfresco Maven Plugin will
    copy alfresco-global-*.properties files from this directory, such as src/test/properties/local -->
    <env>local</env>

    <!-- Compile with Java 7, default is 5 -->
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
  </properties>

  <developers>
    <developer>
      <id>mars</id>
      <name>Marcus Svartmark</name>
      <email>marcus.svartmark (at) redpill-linpro.com</email>
      <organization>Redpill Linpro AB</organization>
      <organizationUrl>http://www.redpill-linpro.com</organizationUrl>
      <roles>
        <role>Founder</role>
        <role>Architect</role>
        <role>Developer</role>
      </roles>
      <timezone>+1</timezone>
    </developer>
    <developer>
      <id>niklas.ekman</id>
      <name>Niklas Ekman</name>
      <email>niklas.ekman (at) redpill-linpro.com</email>
      <organization>Redpill Linpro AB</organization>
      <organizationUrl>http://www.redpill-linpro.com</organizationUrl>
      <roles>
        <role>Architect</role>
        <role>Developer</role>
      </roles>
      <timezone>+1</timezone>
    </developer>
  </developers>

  <contributors>
    <contributor />
  </contributors>

  <scm>
    <connection>scm:git:git@github.com:Redpill-Linpro/alfresco-base.git</connection>
    <developerConnection>scm:git:git@github.com:Redpill-Linpro/alfresco-base.git</developerConnection>
    <url>scm:git:git@github.com:Redpill-Linpro/alfresco-base.git</url>
  </scm>

  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/Redpill-Linpro/alfresco-base/issues</url>
  </issueManagement>

  <repositories>
    <repository>
      <id>redpill-linpro</id>
      <url>https://maven.redpill-linpro.com/nexus/content/groups/public</url>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
      </snapshots>
    </repository>
    <repository>
      <id>alfresco</id>
      <url>https://artifacts.alfresco.com/nexus/content/groups/public</url>
    </repository>
    <repository>
      <id>alfresco-snapshots</id>
      <url>https://artifacts.alfresco.com/nexus/content/groups/public-snapshots</url>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
      </snapshots>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>redpill-linpro</id>
      <url>https://maven.redpill-linpro.com/nexus/content/groups/public</url>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
      </snapshots>
    </pluginRepository>
    <pluginRepository>
      <id>alfresco</id>
      <url>https://artifacts.alfresco.com/nexus/content/groups/public</url>
    </pluginRepository>
    <pluginRepository>
      <id>alfresco-snapshots</id>
      <url>https://artifacts.alfresco.com/nexus/content/groups/public-snapshots</url>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>

  <!-- Here we realize the connection with the Alfresco selected platform (e.g.version and edition) -->
  <dependencyManagement>

  </dependencyManagement>

  <!-- Following dependencies are needed for compiling Java code in src/main/java; <scope>provided</scope> is inherited for each of the following; for more info, please refer to alfresco-platform-distribution POM -->
  <dependencies>

  </dependencies>

  <build>
    <plugins>
      <!-- ################################################################ -->
      <!-- Override surefire configuration to allow for integration testing -->
      <!-- ################################################################ -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven.surefire.version}</version>
        <configuration>
          <excludes>
            <exclude>**/*IntegrationTest.java</exclude>
            <exclude>**/*FunctionalTest.java</exclude>
          </excludes>
          <argLine>${jacoco.agent.arg} ${failsafe.argLine} -Xms256m -Xmx2G -XX:PermSize=512m</argLine>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    
    

    <profile>
      <!-- ############################################### -->
      <!-- profile to copy all code to the exploded tomcat -->
      <!-- ############################################### -->
      <id>dev</id>
      <properties>
        <alfresco.webapp.name>alfresco</alfresco.webapp.name>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <!-- ####################################### -->
            <!-- also clean out local jar file in tomcat -->
            <!-- ####################################### -->
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-clean-plugin</artifactId>
              <version>2.5</version>
              <configuration>
                <filesets>
                  <fileset>
                    <directory>${tomcat.home}/webapps/${alfresco.client.war}/WEB-INF/classes/alfresco/module/${project.artifactId}</directory>
                  </fileset>
                  <fileset>
                    <directory>${tomcat.home}/webapps/${alfresco.client.war}/WEB-INF/lib</directory>
                    <includes>
                      <include>${project.build.finalName}.jar</include>
                    </includes>
                  </fileset>
                </filesets>
              </configuration>
            </plugin>

            <!-- ######################################### -->
            <!-- Copy dependency jar files to local tomcat -->
            <!-- ######################################### -->
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-dependency-plugin</artifactId>
              <executions>
                <execution>
                  <id>hot-copy-dependencies</id>
                  <goals>
                    <goal>copy-dependencies</goal>
                  </goals>
                  <configuration>
                    <outputDirectory>${tomcat.home}/webapps/${alfresco.client.war}/WEB-INF/lib</outputDirectory>
                    <overWriteReleases>false</overWriteReleases>
                    <overWriteSnapshots>false</overWriteSnapshots>
                    <overWriteIfNewer>true</overWriteIfNewer>
                    <includeScope>runtime</includeScope>
                  </configuration>
                </execution>
              </executions>
            </plugin>

            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-resources-plugin</artifactId>
              <version>${maven-resources-plugin.version}</version>
              <executions>
                <execution>
                  <id>hot-copy-resources</id>
                  <goals>
                    <goal>copy-resources</goal>
                  </goals>
                  <configuration>
                    <outputDirectory>${tomcat.home}/webapps/${alfresco.client.war}/WEB-INF/lib</outputDirectory>
                    <resources>
                      <resource>
                        <directory>${project.build.directory}/</directory>
                        <includes>
                          <include>${project.build.finalName}.jar</include>
                        </includes>
                      </resource>
                    </resources>
                  </configuration>
                </execution>

              </executions>

              <configuration>
                <overwrite>true</overwrite>
              </configuration>
            </plugin>

            <plugin>
              <groupId>org.redpill-linpro.alfresco</groupId>
              <artifactId>refreshwebscripts-maven-plugin</artifactId>
              <version>1.0.2</version>
            </plugin>
          </plugins>
        </pluginManagement>

        <plugins>
          <plugin>
            <artifactId>maven-clean-plugin</artifactId>
          </plugin>

          <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>hot-copy-dependencies</id>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
              <execution>
                <id>hot-copy-resources</id>
                <phase>package</phase>
              </execution>
              <execution>
                <id>hot-copy-web-resources</id>
                <phase>package</phase>
              </execution>
              <execution>
                <id>hot-copy-config-resources</id>
                <phase>package</phase>
              </execution>
              <execution>
                <id>hot-copy-jrebel-config</id>
                <phase>package</phase>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.zeroturnaround</groupId>
            <artifactId>jrebel-maven-plugin</artifactId>
          </plugin>

          <plugin>
            <groupId>org.redpill-linpro.alfresco</groupId>
            <artifactId>refreshwebscripts-maven-plugin</artifactId>
            <version>1.0.2</version>
            <executions>
              <execution>
                <id>webscripts</id>
                <phase>package</phase>
                <goals>
                  <goal>refresh</goal>
                </goals>
                <configuration>
                  <url>http://${tomcat.host}:${tomcat.port}/${alfresco.client.war}/service/index</url>
                  <password>admin</password>
                </configuration>
              </execution>
              <execution>
                <id>cache</id>
                <phase>package</phase>
                <goals>
                  <goal>refresh</goal>
                </goals>
                <configuration>
                  <url>http://${tomcat.host}:${tomcat.port}/${alfresco.client.war}/page/caches/dependency/clear</url>
                  <password>admin</password>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- ####################################################################### -->
    <!-- upload profile that uploads the artifact via CMIS to an Alfresco server -->
    <!-- ####################################################################### -->
    <profile>
      <id>upload</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.redpill-linpro.alfresco</groupId>
            <artifactId>artifact-upload-maven-plugin</artifactId>
            <version>1.0.3</version>
            <executions>
              <execution>
                <id>artifact-upload</id>
                <phase>install</phase>
                <goals>
                  <goal>upload</goal>
                </goals>
                <inherited>true</inherited>
              </execution>
            </executions>
            <configuration>
              <username>${artifact-upload.username}</username>
              <password>${artifact-upload.password}</password>
              <site>${artifact-upload.site}</site>
              <url>${artifact-upload.cmis.url}</url>
              <path>${artifact-upload.client.upload.path}</path>
              <overwrite>true</overwrite>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    
    <profile>
      <!-- ############################################################################ -->
      <!-- Here we define our integration test features                                 -->
      <!-- ############################################################################ -->
      <id>it</id>
      <properties>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-failsafe-plugin</artifactId>
              <version>${maven.failsafe.version}</version>
              <configuration>
                <skipTests>true</skipTests>
                <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
              </configuration>
              <executions>
                <execution>
                  <id>integration-test</id>
                  <phase>test</phase>
                  <goals>
                    <goal>integration-test</goal>
                    <goal>verify</goal>
                  </goals>
                  <configuration>
                    <argLine>${jacoco-it.agent.arg} ${failsafe.argLine} -Xms256m -Xmx2G -XX:PermSize=512m</argLine>
                    <excludes>
                      <exclude>**/*FunctionalTest.java</exclude>
                    </excludes>
                    <includes>
                      <include>**/*IntegrationTest.java</include>
                    </includes>
                  </configuration>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>


        <plugins>
          <!-- ###################################################################### -->
          <!-- Set default properties so that we don't have to multiply plugin config -->
          <!-- ###################################################################### -->
          <plugin>
            <groupId>org.redpill-linpro.alfresco</groupId>
            <artifactId>properties-maven-plugin</artifactId>
            <version>1.0.0</version>
            <executions>
              <execution>
                <id>set-default-properties</id>
                <phase>validate</phase>
                <goals>
                  <goal>set-properties</goal>
                </goals>
                <configuration>
                  <properties>
                    <jacoco-it.agent.arg />
                  </properties>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <executions>
              <execution>
                <id>integration-test</id>
                <configuration>
                  <skipTests>false</skipTests>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>

    </profile>
    
    <profile>
      <id>ft</id>
      
      <properties>
        <cargo.tomcat.version>7.0.59</cargo.tomcat.version>
        <cargo.container.timeout>300000</cargo.container.timeout>
        <cargo.jvmargs.extra1>-Xmx3g -XX:MaxPermSize=256m</cargo.jvmargs.extra1>
        <cargo.jvmargs.extra2></cargo.jvmargs.extra2>
        <app.amp.client.war.folder>${project.build.directory}/alfresco</app.amp.client.war.folder>
          
      </properties>
      <dependencies>
        <!-- 
                <dependency>
                  <groupId>com.jayway.restassured</groupId>
                  <artifactId>rest-assured</artifactId>
                  <version>${restassured.version}</version>
                  <exclusions>
                    <exclusion>
                      <groupId>org.codehaus.groovy</groupId>
                      <artifactId>groovy</artifactId>
                    </exclusion>
                    <exclusion>
                      <groupId>org.codehaus.groovy</groupId>
                      <artifactId>groovy-xml</artifactId>
                    </exclusion>
                    <exclusion>
                      <groupId>org.codehaus.groovy</groupId>
                      <artifactId>groovy-json</artifactId>
                    </exclusion>
                  </exclusions>
                </dependency>
        -->
        <dependency>
          <groupId>${alfresco.groupId}</groupId>
          <artifactId>${alfresco.platform.war.artifactId}</artifactId>
          <type>war</type>
          <version>${alfresco.platform.version}</version>
          <scope>test</scope>
        </dependency>

        <dependency>
          <groupId>${alfresco.groupId}</groupId>
          <artifactId>alfresco-repository</artifactId>
          <version>${alfresco.platform.version}</version>
        </dependency>
        <dependency>
          <groupId>org.alfresco</groupId>
          <artifactId>alfresco-repository</artifactId>
          <version>${alfresco.platform.version}</version>
          <classifier>h2scripts</classifier>
        </dependency>
        <dependency>
          <groupId>com.h2database</groupId>
          <artifactId>h2</artifactId>
          <version>${h2.version}</version>
        </dependency>
     
      </dependencies>

      <build>
        
        
        <pluginManagement>
          <plugins>
            
            <!-- ############################################################################ -->
            <!-- Here we define the failsafe plugin to run our integration & functional tests -->
            <!-- ############################################################################ -->
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-failsafe-plugin</artifactId>
              <version>${maven.failsafe.version}</version>
              <configuration>
                <skipTests>true</skipTests>
                <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
              </configuration>
              <executions>
                <execution>
                  <id>functional-test</id>
                  <phase>integration-test</phase>
                  <goals>
                    <goal>integration-test</goal>
                    <goal>verify</goal>
                  </goals>
                  <configuration>
                    <systemPropertyVariables>
                      <cargo.servlet.port>${cargo.servlet.port}</cargo.servlet.port>
                      <cargo.rmi.port>${cargo.rmi.port}</cargo.rmi.port>
                    </systemPropertyVariables>
                    <argLine>${failsafe.argLine} -Xms256m -Xmx1G -XX:PermSize=512m</argLine>
                    <excludes>
                      <exclude>**/*IntegrationTest.java</exclude>
                    </excludes>
                    <includes>
                      <include>**/*FunctionalTest.java</include>
                    </includes>
                  </configuration>
                </execution>
              </executions>
            </plugin>
            
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-dependency-plugin</artifactId>
              <configuration>
                <skip>${ft.skip}</skip>
              </configuration>
              <executions>
                <!-- Fetch and unpack Alfresco Repository / Share in the target / folder -->
                <execution>
                  <id>unpack-alfresco</id>
                  <phase>prepare-package</phase>
                  <goals>
                    <goal>unpack</goal>
                  </goals>
                  <configuration>
                    <outputDirectory>${app.amp.client.war.folder}</outputDirectory>
                    <artifactItems>
                      <artifactItem>
                        <groupId>${alfresco.groupId}</groupId>
                        <artifactId>${alfresco.platform.war.artifactId}</artifactId>
                        <type>war</type>
                        <version>${alfresco.platform.version}</version>
                      </artifactItem>
                    </artifactItems>
                  </configuration>
                </execution>

                <!-- Copy all dependencies into the WEB-INF/lib -->
                <execution>
                  <id>hot-copy-dependencies</id>
                  <goals>
                    <goal>copy-dependencies</goal>
                  </goals>
                  <configuration>
                    <outputDirectory>${app.amp.client.war.folder}/WEB-INF/lib</outputDirectory>
                    <overWriteReleases>false</overWriteReleases>
                    <overWriteSnapshots>false</overWriteSnapshots>
                    <overWriteIfNewer>true</overWriteIfNewer>
                    <includeScope>compile</includeScope>
                  </configuration>
                </execution>
              </executions>
            </plugin>

            <!-- Configure tomcat context.xml included in the webapp with proper filtering -->
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-resources-plugin</artifactId>
              <version>${maven-resources-plugin.version}</version>
              <configuration>
                <skip>${ft.skip}</skip>
              </configuration>

              <executions>
                <!-- When the AMP runs locally, src/test/webapp and src/test/resources will contain -->
                <!-- the location of the configuration files -->
                <execution>
                  <id>copy-alfresco-test-resources</id>
                  <phase>prepare-package</phase>
                  <goals>
                    <goal>copy-resources</goal>
                  </goals>
                  <configuration>
                    <outputDirectory>${app.amp.client.war.folder}</outputDirectory>
                    <resources>
                      <resource>
                        <directory>src/test/webapp</directory>
                      </resource>
                      <resource>
                        <directory>${project.build.testOutputDirectory}</directory>
                        <targetPath>WEB-INF/classes</targetPath>
                        <filtering>${app.filtering.enabled}</filtering>
                        <excludes>
                          <exclude>**/*.class</exclude>
                        </excludes>
                      </resource>
                      <resource>
                        <directory>src/test/properties/${env}</directory>
                        <filtering>${app.filtering.enabled}</filtering>
                        <targetPath>WEB-INF/classes</targetPath>
                      </resource>
                    </resources>
                  </configuration>
                </execution>

                <execution>
                  <id>copy-artifact-resource</id>
                  <phase>package</phase>
                  <goals>
                    <goal>copy-resources</goal>
                  </goals>
                  <configuration>
                    <outputDirectory>${app.amp.client.war.folder}</outputDirectory>
                    <resources>
                      <!-- if it's a JAR project this is the file that gets copied -->
                      <resource>
                        <directory>target</directory>
                        <targetPath>WEB-INF/lib</targetPath>
                        <includes>
                          <include>${project.build.finalName}.jar</include>
                        </includes>
                        <filtering>false</filtering>
                      </resource>

                      <!-- if it's an AMP project this is the file that gets copied -->
                      <resource>
                        <directory>target/${project.artifactId}-${project.version}/lib</directory>
                        <targetPath>WEB-INF/lib</targetPath>
                        <includes>
                          <include>${project.build.finalName}.jar</include>
                        </includes>
                        <filtering>false</filtering>
                      </resource>
                      
                      <resource>
                        <directory>${project.build.directory}/amp/lib</directory>
                        <targetPath>WEB-INF/lib</targetPath>
                        <includes>
                          <include>${project.build.finalName}.jar</include>
                        </includes>
                        <filtering>false</filtering>
                      </resource>
                    </resources>
                  </configuration>
                </execution>

                <execution>
                  <id>copy-tomcat-resources</id>
                  <phase>prepare-package</phase>
                  <goals>
                    <goal>copy-resources</goal>
                  </goals>
                  <configuration>
                    <outputDirectory>${app.amp.client.war.folder}</outputDirectory>
                    <resources>
                      <resource>
                        <directory>tomcat</directory>
                        <filtering>${app.filtering.enabled}</filtering>
                        <targetPath>WEB-INF</targetPath>
                        <includes>
                          <include>context.xml</include>
                        </includes>
                      </resource>
                    </resources>
                  </configuration>
                </execution>
              </executions>
            </plugin>

            <!-- reserve network ports for tomcat -->
            <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>build-helper-maven-plugin</artifactId>
              <version>1.9.1</version>

              <configuration>
                <skip>${ft.skip}</skip>
              </configuration>

              <executions>
                <execution>
                  <id>reserve-network-port</id>
                  <goals>
                    <goal>reserve-network-port</goal>
                  </goals>
                  <phase>process-resources</phase>
                  <configuration>
                    <portNames>
                      <portName>cargo.servlet.port</portName>
                      <portName>cargo.rmi.port</portName>
                      <portName>cargo.tomcat.ajp.port</portName>
                    </portNames>
                  </configuration>
                </execution>
              </executions>
            </plugin>

            <!-- the cargo plugin launches the actual -->
            <plugin>
              <groupId>org.codehaus.cargo</groupId>
              <artifactId>cargo-maven2-plugin</artifactId>
              <version>${maven.cargo.version}</version>
              <configuration>
                <skip>${ft.skip}</skip>

                <container>
                  <containerId>tomcat7x</containerId>
                  <artifactInstaller>
                    <groupId>org.apache.tomcat</groupId>
                    <artifactId>tomcat</artifactId>
                    <version>${cargo.tomcat.version}</version>
                  </artifactInstaller>
                  <log>${project.build.directory}/cargo.log</log>
                  <timeout>${cargo.container.timeout}</timeout>
                  <systemProperties>
                    <dir.root>${alfresco.data.location}</dir.root>
                  </systemProperties>
                  <dependencies>
                    
                    <dependency>
                      <groupId>com.h2database</groupId>
                      <artifactId>h2</artifactId>
                    </dependency>

                  </dependencies>
                </container>

                <deployables>
                  <deployable>
                    <!-- Override location to point to the exploded webapp. -->
                    <groupId>${alfresco.client.war.groupId}</groupId>
                    <artifactId>${alfresco.platform.war.artifactId}</artifactId>
                    <type>war</type>
                    <location>${app.amp.client.war.folder}</location>
                    <properties>
                      <context>alfresco</context>
                    </properties>
                  </deployable>
                </deployables>

                <configuration>
                  <home>${project.build.directory}/tomcat-home</home>
                  <properties>
                    <cargo.servlet.port>${cargo.servlet.port}</cargo.servlet.port>
                    <cargo.hostname>${tomcat.host}</cargo.hostname>
                    <cargo.rmi.port>${cargo.rmi.port}</cargo.rmi.port>
                    <cargo.tomcat.ajp.port>${cargo.tomcat.ajp.port}</cargo.tomcat.ajp.port>
                  </properties>
                </configuration>
              </configuration>

              <executions>
                <execution>
                  <id>start-tomcat</id>
                  <phase>pre-integration-test</phase>
                  <goals>
                    <goal>start</goal>
                  </goals>
                  <configuration>
                    <configuration>
                      <properties>
                        <cargo.jvmargs>${jacoco-ft.agent.arg} ${cargo.jvmargs.extra1} ${cargo.jvmargs.extra2}</cargo.jvmargs>
                      </properties>
                    </configuration>
                  </configuration>
                </execution>

                <execution>
                  <id>stop-tomcat</id>
                  <phase>post-integration-test</phase>
                  <goals>
                    <goal>stop</goal>
                  </goals>
                </execution>
              </executions>

              <dependencies>
                <dependency>
                  <groupId>org.codehaus.plexus</groupId>
                  <artifactId>plexus-archiver</artifactId>
                  <version>2.3</version>
                </dependency>
              </dependencies>
            </plugin>
          </plugins>
        </pluginManagement>

        <plugins>
          <!-- ###################################################################### -->
          <!-- Set default properties so that we don't have to multiply plugin config -->
          <!-- ###################################################################### -->
          <plugin>
            <groupId>org.redpill-linpro.alfresco</groupId>
            <artifactId>properties-maven-plugin</artifactId>
            <version>1.0.0</version>
            <executions>
              <execution>
                <id>set-default-properties</id>
                <phase>validate</phase>
                <goals>
                  <goal>set-properties</goal>
                </goals>
                <configuration>
                  <properties>
                    <jacoco-ft.agent.arg />
                  </properties>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
          </plugin>

          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
          </plugin>

          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <executions>
              <execution>
                <id>start-tomcat</id>
              </execution>
              <execution>
                <id>stop-tomcat</id>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <executions>
              <execution>
                <id>functional-test</id>
                <configuration>
                  <skipTests>${ft.skip}</skipTests>
                </configuration>
              </execution> 
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <distributionManagement>
    <repository>
      <id>redpill-linpro-releases</id>
      <url>https://maven.redpill-linpro.com/nexus/content/repositories/releases</url>
    </repository>
    <snapshotRepository>
      <id>redpill-linpro-snapshots</id>
      <url>https://maven.redpill-linpro.com/nexus/content/repositories/snapshots</url>
    </snapshotRepository>
  </distributionManagement>

</project>
