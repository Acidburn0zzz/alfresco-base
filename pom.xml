<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.alfresco.maven</groupId>
    <artifactId>alfresco-sdk-parent</artifactId>
    <version>1.1.1</version>
  </parent>

  <groupId>com.redpill-linpro.alfresco</groupId>
  <artifactId>alfresco-base</artifactId>
  <version>1.1.1.12-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Redpill Linpro Alfresco Parent POM</name>
  <description>The Parent POM for all RLP based Alfresco projects</description>

  <!-- | SDK properties have sensible defaults in the SDK parent, | but you can override the properties below to use another version. | For more available properties see the alfresco-sdk-parent POM. -->
  <properties>
    <alfresco.groupId>org.alfresco</alfresco.groupId>
    <alfresco.version>4.2.e</alfresco.version>
    <app.log.root.level>WARN</app.log.root.level>
    <alfresco.data.location>alf_data_dev</alfresco.data.location>
    <!-- Defines the target WAR for this AMP. Allowed values: alfresco | share -->
    <!-- Defaults to a repository AMP -->
    <alfresco.client.war>alfresco</alfresco.client.war>
    <!-- This controls which properties will be picked in src/test/properties for embedded run -->
    <env>local</env>
    <tomcat.host>localhost</tomcat.host>
    <tomcat.port>8080</tomcat.port>
    <java.source.version>1.7</java.source.version>
    <java.target.version>1.7</java.target.version>
    <maven.failsafe.version>2.18.1</maven.failsafe.version>
    <maven.cargo.version>1.4.14</maven.cargo.version>
    <cargo.tomcat.version>7.0.53</cargo.tomcat.version>
    <cargo.container.timeout>300000</cargo.container.timeout>
    <cargo.jvmargs.extra1>-Xmx3g -XX:MaxPermSize=256m</cargo.jvmargs.extra1>
    <cargo.jvmargs.extra2></cargo.jvmargs.extra2>
    <!-- This version works with the currect jenkins jacoco plugin 1.0.19 -->
    <jacoco.version>0.7.4.201502262128</jacoco.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <spring.framework.version>3.0.5.RELEASE</spring.framework.version>
    <groovy.version>2.4.3</groovy.version>
    <restassured.version>2.4.1</restassured.version>
    <hamcrest.version>1.3</hamcrest.version>
    <jmock.version>2.6.0</jmock.version>
    <failsafe.argLine />
    <!-- Function tests should be skipped by default. Each module which need to run those -->
    <!-- has to add this property to itself. -->
    <ft.skip>true</ft.skip>
  </properties>

  <developers>
    <developer>
      <id>marcus.svensson</id>
      <name>Marcus Svensson</name>
      <email>marcus.svensson (at) redpill-linpro.com</email>
      <organization>Redpill Linpro AB</organization>
      <organizationUrl>http://www.redpill-linpro.com</organizationUrl>
      <roles>
        <role>Founder</role>
        <role>Architect</role>
        <role>Developer</role>
      </roles>
      <timezone>+1</timezone>
    </developer>
    <developer>
      <id>niklas.ekman</id>
      <name>Niklas Ekman</name>
      <email>niklas.ekman (at) redpill-linpro.com</email>
      <organization>Redpill Linpro AB</organization>
      <organizationUrl>http://www.redpill-linpro.com</organizationUrl>
      <roles>
        <role>Architect</role>
        <role>Developer</role>
      </roles>
      <timezone>+1</timezone>
    </developer>
  </developers>

  <contributors>
    <contributor />
  </contributors>

  <scm>
    <connection>scm:git:git://git.redpill-linpro.com/alfresco-common/alfresco-base</connection>
    <developerConnection>scm:git:git://git.redpill-linpro.com/alfresco-common/alfresco-base</developerConnection>
    <url>scm:git:git://git.redpill-linpro.com/alfresco-common/alfresco-base</url>
  </scm>

  <issueManagement>
    <system>Git</system>
    <url>https://localhost/issues</url>
  </issueManagement>

  <repositories>
    <repository>
      <id>redpill-linpro</id>
      <url>https://maven.redpill-linpro.com/nexus/content/groups/public</url>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
      </snapshots>
    </repository>
    <repository>
      <id>alfresco</id>
      <url>https://artifacts.alfresco.com/nexus/content/groups/public</url>
    </repository>
    <repository>
      <id>alfresco-snapshots</id>
      <url>https://artifacts.alfresco.com/nexus/content/groups/public-snapshots</url>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
      </snapshots>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>redpill-linpro</id>
      <url>https://maven.redpill-linpro.com/nexus/content/groups/public</url>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
      </snapshots>
    </pluginRepository>
    <pluginRepository>
      <id>alfresco</id>
      <url>https://artifacts.alfresco.com/nexus/content/groups/public</url>
    </pluginRepository>
    <pluginRepository>
      <id>alfresco-snapshots</id>
      <url>https://artifacts.alfresco.com/nexus/content/groups/public-snapshots</url>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>

  <!-- Following dependencies are needed for compiling Java code in src/main/java; <scope>provided</scope> is inherited for each of the following; for more info, please refer to alfresco-platform-distribution POM -->
  <dependencies>
    <!-- Test dependencies -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <!-- Here we realize the connection with the Alfresco selected platform (e.g.version and edition) -->
  <dependencyManagement>
    <dependencies>
      <!-- This will import the dependencyManagement for all artifacts in the selected Alfresco version/edition (see http://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Importing_Dependencies) NOTE: You still need to define dependencies in your POM, but you can omit 
        version as it's enforced by this dependencyManagement. NOTE: It defaults to the latest version this SDK pom has been tested with, but alfresco version can/should be overridden in your project's pom -->
      <dependency>
        <groupId>${alfresco.groupId}</groupId>
        <artifactId>alfresco-platform-distribution</artifactId>
        <version>${alfresco.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.11</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.jmock</groupId>
        <artifactId>jmock</artifactId>
        <version>${jmock.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.jmock</groupId>
        <artifactId>jmock-legacy</artifactId>
        <version>${jmock.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.jmock</groupId>
        <artifactId>jmock-junit4</artifactId>
        <version>${jmock.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.codehaus.groovy</groupId>
        <artifactId>groovy-all</artifactId>
        <version>${groovy.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-library</artifactId>
        <version>${hamcrest.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-core</artifactId>
        <version>${hamcrest.version}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <finalName>${project.artifactId}-${project.version}</finalName>
    <plugins>

      <!-- ###################################################################### -->
      <!-- Set default properties so that we don't have to multiply plugin config -->
      <!-- ###################################################################### -->
      <plugin>
        <groupId>org.redpill-linpro.alfresco</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>1.0.0</version>
        <executions>
          <execution>
            <id>set-default-properties</id>
            <phase>validate</phase>
            <goals>
              <goal>set-properties</goal>
            </goals>
            <configuration>
              <properties>
                <jacoco.agent.arg />
                <jacoco-it.agent.arg />
                <jacoco-ft.agent.arg />
              </properties>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- ############################################################################ -->
      <!-- Plugin to add enterprise jars to dependency path if it's an enterprise build -->
      <!-- ############################################################################ -->
      <plugin>
        <groupId>org.redpill-linpro.alfresco</groupId>
        <artifactId>activate-enterprise-maven-plugin</artifactId>
        <version>1.0.0</version>
        <executions>
          <execution>
            <id>activate-enterprise-build</id>
            <phase>validate</phase>
            <goals>
              <goal>activate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Use the jgitflow for enabling Git Flow release workflow -->
      <plugin>
        <groupId>com.amashchenko.maven.plugin</groupId>
        <artifactId>gitflow-maven-plugin</artifactId>
        <version>1.0.8</version>
        <configuration>
          <!-- see goals wiki page for configuration options -->
        </configuration>
      </plugin>

      <!-- ################################################################ -->
      <!-- Override surefire configuration to allow for integration testing -->
      <!-- ################################################################ -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>**/*IntegrationTest.java</exclude>
            <exclude>**/*FunctionalTest.java</exclude>
          </excludes>
          <argLine>${jacoco.agent.arg} ${failsafe.argLine} -Xms256m -Xmx2G -XX:PermSize=512m</argLine>
        </configuration>
        <executions>
          <execution>
            <id>default-test</id>
            <configuration>
              <skipTests>false</skipTests>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>yuicompressor-maven-plugin</artifactId>
        <version>1.3.2</version>
        <executions>
          <execution>
            <id>minimize-javascript</id>
            <goals>
              <goal>compress</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <excludes>
            <exclude>${project.basedir}/src/main/amp/config/**/*.js</exclude>
            <exclude>${project.build.directory}/**/*.js</exclude>
            <exclude>**/target/**</exclude>
            <exclude>**/*-min.js</exclude>
            <exclude>**/*-min.css</exclude>
            <exclude>**/WEB-INF/**</exclude>
            <exclude>**/tiny_mce/**</exclude>
            <exclude>**/log4javascript*.js</exclude>
          </excludes>
          <sourceDirectory>${project.basedir}/src/main/amp/web</sourceDirectory>
          <outputDirectory>${project.build.directory}/${project.build.finalName}/web</outputDirectory>
          <force>true</force>
          <statistics>false</statistics>
          <jswarn>false</jswarn>
          <encoding>UTF-8</encoding>
          <preProcessAggregates>true</preProcessAggregates>
          <excludeResources>true</excludeResources>
        </configuration>
      </plugin>
    </plugins>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.alfresco.maven.plugin</groupId>
          <artifactId>alfresco-maven-plugin</artifactId>
          <version>${maven.alfresco.version}</version>
          <extensions>true</extensions>
          <configuration>
            <verbose>false</verbose>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven.compiler.version}</version>
          <configuration>
            <source>${java.source.version}</source>
            <target>${java.target.version}</target>
          </configuration>
        </plugin>

        <!-- ####################################### -->
        <!-- also clean out local jar file in tomcat -->
        <!-- ####################################### -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>2.5</version>
          <configuration>
            <filesets>
              <fileset>
                <directory>${tomcat.home}/shared/classes/alfresco/module/${project.artifactId}</directory>
              </fileset>
              <fileset>
                <directory>${tomcat.home}/webapps/${alfresco.client.war}/WEB-INF/lib</directory>
                <includes>
                  <include>${project.build.finalName}.jar</include>
                </includes>
              </fileset>
            </filesets>
          </configuration>
        </plugin>

        <!-- ######################################### -->
        <!-- Copy dependency jar files to local tomcat -->
        <!-- ######################################### -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.6</version>
          <executions>
            <execution>
              <id>hot-copy-dependencies</id>
              <goals>
                <goal>copy-dependencies</goal>
              </goals>
              <configuration>
                <outputDirectory>${tomcat.home}/webapps/${alfresco.client.war}/WEB-INF/lib</outputDirectory>
                <overWriteReleases>false</overWriteReleases>
                <overWriteSnapshots>false</overWriteSnapshots>
                <overWriteIfNewer>true</overWriteIfNewer>
                <includeScope>runtime</includeScope>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.5</version>
          <executions>
            <execution>
              <id>hot-copy-resources</id>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <configuration>
                <outputDirectory>${tomcat.home}/webapps/${alfresco.client.war}/WEB-INF/lib</outputDirectory>
                <resources>
                  <resource>
                    <directory>${project.build.directory}/${project.build.finalName}/lib</directory>
                    <includes>
                      <include>${project.build.finalName}.jar</include>
                    </includes>
                  </resource>
                </resources>
              </configuration>
            </execution>

            <execution>
              <id>hot-copy-web-resources</id>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <configuration>
                <outputDirectory>${tomcat.home}/webapps/${alfresco.client.war}</outputDirectory>
                <resources>
                  <resource>
                    <directory>src/main/amp/web</directory>
                  </resource>
                  <resource>
                    <directory>${project.build.directory}/${project.build.finalName}/web</directory>
                    <includes>
                      <include>**/*.*</include>
                    </includes>
                    <filtering>true</filtering>
                  </resource>
                </resources>
              </configuration>
            </execution>

            <execution>
              <id>hot-copy-config-resources</id>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <configuration>
                <outputDirectory>${tomcat.home}/shared/classes/alfresco</outputDirectory>
                <resources>
                  <resource>
                    <directory>${project.build.directory}/${project.build.finalName}/config/alfresco</directory>
                    <includes>
                      <include>**/*</include>
                    </includes>
                    <filtering>true</filtering>
                  </resource>
                </resources>
              </configuration>
            </execution>

            <execution>
              <id>hot-copy-jrebel-config</id>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <configuration>
                <outputDirectory>${tomcat.home}/webapps/${alfresco.client.war}/WEB-INF/classes</outputDirectory>
                <resources>
                  <resource>
                    <directory>${project.build.directory}/classes</directory>
                    <includes>
                      <include>rebel.xml</include>
                    </includes>
                    <filtering>true</filtering>
                  </resource>
                </resources>
              </configuration>
            </execution>
          </executions>

          <configuration>
            <overwrite>true</overwrite>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.redpill-linpro.alfresco</groupId>
          <artifactId>refreshwebscripts-maven-plugin</artifactId>
          <version>1.0.2</version>
        </plugin>

        <plugin>
          <groupId>org.zeroturnaround</groupId>
          <artifactId>jrebel-maven-plugin</artifactId>
          <version>1.1.3</version>
        </plugin>

        <!-- ############################################################################ -->
        <!-- Here we define the failsafe plugin to run our integration & functional tests -->
        <!-- ############################################################################ -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${maven.failsafe.version}</version>
          <configuration>
            <skipTests>true</skipTests>
            <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
          </configuration>
          <executions>
            <execution>
              <id>integration-test</id>
              <phase>test</phase>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
              <configuration>
                <argLine>${jacoco-it.agent.arg} ${failsafe.argLine} -Xms256m -Xmx2G -XX:PermSize=512m</argLine>
                <excludes>
                  <exclude>**/*FunctionalTest.java</exclude>
                </excludes>
                <includes>
                  <include>**/*IntegrationTest.java</include>
                </includes>
              </configuration>
            </execution>
            <execution>
              <id>functional-test</id>
              <phase>integration-test</phase>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
              <configuration>
                <systemPropertyVariables>
                  <cargo.servlet.port>${cargo.servlet.port}</cargo.servlet.port>
                  <cargo.rmi.port>${cargo.rmi.port}</cargo.rmi.port>
                </systemPropertyVariables>
                <argLine>${failsafe.argLine} -Xms256m -Xmx1G -XX:PermSize=512m</argLine>
                <excludes>
                  <exclude>**/*IntegrationTest.java</exclude>
                </excludes>
                <includes>
                  <include>**/*FunctionalTest.java</include>
                </includes>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.tomcat.maven</groupId>
          <artifactId>tomcat7-maven-plugin</artifactId>
          <dependencies>
            <dependency>
              <groupId>org.springframework</groupId>
              <artifactId>spring-instrument-tomcat</artifactId>
              <version>3.0.7.RELEASE</version>
            </dependency>
          </dependencies>
          <configuration>
            <port>${tomcat.port}</port>
            <extraResources>
              <extraResource>
                <directory>${project.build.testOutputDirectory}</directory>
                <includes>
                  <include>log4j.properties</include>
                </includes>
              </extraResource>
            </extraResources>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <!-- ############################################### -->
    <!-- profile to copy all code to the exploded tomcat -->
    <!-- ############################################### -->
    <profile>
      <id>dev</id>
      <properties>
        <alfresco.webapp.name>alfresco</alfresco.webapp.name>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-clean-plugin</artifactId>
          </plugin>

          <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>hot-copy-dependencies</id>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
              <execution>
                <id>hot-copy-resources</id>
                <phase>package</phase>
              </execution>
              <execution>
                <id>hot-copy-web-resources</id>
                <phase>package</phase>
              </execution>
              <execution>
                <id>hot-copy-config-resources</id>
                <phase>package</phase>
              </execution>
              <execution>
                <id>hot-copy-jrebel-config</id>
                <phase>package</phase>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.zeroturnaround</groupId>
            <artifactId>jrebel-maven-plugin</artifactId>
          </plugin>

          <plugin>
            <groupId>org.redpill-linpro.alfresco</groupId>
            <artifactId>refreshwebscripts-maven-plugin</artifactId>
            <version>1.0.2</version>
            <executions>
              <execution>
                <id>webscripts</id>
                <phase>package</phase>
                <goals>
                  <goal>refresh</goal>
                </goals>
                <configuration>
                  <url>http://${tomcat.host}:${tomcat.port}/${alfresco.client.war}/service/index</url>
                  <password>admin</password>
                </configuration>
              </execution>
              <execution>
                <id>cache</id>
                <phase>package</phase>
                <goals>
                  <goal>refresh</goal>
                </goals>
                <configuration>
                  <url>http://${tomcat.host}:${tomcat.port}/${alfresco.client.war}/page/caches/dependency/clear</url>
                  <password>admin</password>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- ####################################################################### -->
    <!-- upload profile that uploads the artifact via CMIS to an Alfresco server -->
    <!-- ####################################################################### -->
    <profile>
      <id>upload</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.redpill-linpro.alfresco</groupId>
            <artifactId>artifact-upload-maven-plugin</artifactId>
            <version>1.0.3</version>
            <executions>
              <execution>
                <id>artifact-upload</id>
                <phase>install</phase>
                <goals>
                  <goal>upload</goal>
                </goals>
                <inherited>true</inherited>
              </execution>
            </executions>
            <configuration>
              <username>${artifact-upload.username}</username>
              <password>${artifact-upload.password}</password>
              <site>${artifact-upload.site}</site>
              <url>${artifact-upload.cmis.url}</url>
              <path>${artifact-upload.client.upload.path}</path>
              <overwrite>true</overwrite>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- ########################################################################## -->
    <!-- code coverage profile that enables jacoco which creates nice code coverage -->
    <!-- on integration tests too -->
    <!-- ########################################################################## -->
    <profile>
      <id>jenkins</id>
      <activation>
        <property>
          <name>env.BUILD_NUMBER</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco.version}</version>
            <executions>
              <execution>
                <id>pre-unit-test</id>
                <phase>initialize</phase>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
                <configuration>
                  <destFile>${project.build.directory}/coverage-reports/jacoco.exec</destFile>
                  <propertyName>jacoco.agent.arg</propertyName>
                </configuration>
              </execution>

              <execution>
                <id>pre-integration-test</id>
                <phase>initialize</phase>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
                <configuration>
                  <destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
                  <propertyName>jacoco-it.agent.arg</propertyName>
                </configuration>
              </execution>

              <execution>
                <id>pre-functional-test</id>
                <phase>initialize</phase>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
                <configuration>
                  <destFile>${project.build.directory}/coverage-reports/jacoco-ft.exec</destFile>
                  <propertyName>jacoco-ft.agent.arg</propertyName>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>report</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco.version}</version>
            <executions>
              <execution>
                <id>merge-all-tests</id>
                <phase>verify</phase>
                <goals>
                  <goal>merge</goal>
                </goals>
                <configuration>
                  <fileSets>
                    <fileSet>
                      <directory>${project.build.directory}/coverage-reports</directory>
                      <includes>
                        <include>*.exec</include>
                      </includes>
                      <excludes>
                        <exclude>**/*-all.exec</exclude>
                      </excludes>
                    </fileSet>
                  </fileSets>
                  <destFile>${project.build.directory}/coverage-reports/jacoco-all.exec</destFile>
                </configuration>
              </execution>

              <execution>
                <id>report-all-tests</id>
                <phase>verify</phase>
                <goals>
                  <goal>report</goal>
                </goals>
                <configuration>
                  <dataFile>${project.build.directory}/coverage-reports/jacoco-all.exec</dataFile>
                  <outputDirectory>${project.reporting.outputDirectory}</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>        
        </plugins>
      </build>
    </profile>

    <profile>
      <id>it</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <executions>
              <execution>
                <id>integration-test</id>
                <configuration>
                  <skipTests>false</skipTests>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>ft</id>

      <dependencies>
        <dependency>
          <groupId>com.h2database</groupId>
          <artifactId>h2</artifactId>
          <version>${h2.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>tk.skuro.alfresco</groupId>
          <artifactId>h2-support</artifactId>
          <version>${h2-support.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-instrument-tomcat</artifactId>
          <version>3.0.7.RELEASE</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>${alfresco.client.war.groupId}</groupId>
          <artifactId>${alfresco.client.war}</artifactId>
          <type>war</type>
          <version>${alfresco.client.war.version}</version>
          <scope>test</scope>
        </dependency>
      </dependencies>

      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-dependency-plugin</artifactId>
              <configuration>
                <skip>${ft.skip}</skip>
              </configuration>
              <executions>
                <!-- Fetch and unpack Alfresco Repository / Share in the target / folder -->
                <execution>
                  <id>unpack-alfresco</id>
                  <phase>prepare-package</phase>
                  <goals>
                    <goal>unpack</goal>
                  </goals>
                  <configuration>
                    <outputDirectory>${alfresco.client.war.folder}</outputDirectory>
                    <artifactItems>
                      <artifactItem>
                        <groupId>${alfresco.client.war.groupId}</groupId>
                        <artifactId>${alfresco.client.war}</artifactId>
                        <type>war</type>
                        <version>${alfresco.client.war.version}</version>
                      </artifactItem>
                    </artifactItems>
                  </configuration>
                </execution>

                <!-- Copy all dependencies into the WEB-INF/lib -->
                <execution>
                  <id>hot-copy-dependencies</id>
                  <goals>
                    <goal>copy-dependencies</goal>
                  </goals>
                  <configuration>
                    <outputDirectory>${alfresco.client.war.folder}/WEB-INF/lib</outputDirectory>
                    <overWriteReleases>false</overWriteReleases>
                    <overWriteSnapshots>false</overWriteSnapshots>
                    <overWriteIfNewer>true</overWriteIfNewer>
                    <includeScope>runtime</includeScope>
                  </configuration>
                </execution>
              </executions>
            </plugin>

            <!-- Configure tomcat context.xml included in the webapp with proper filtering -->
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-resources-plugin</artifactId>

              <configuration>
                <skip>${ft.skip}</skip>
              </configuration>

              <executions>
                <!-- When the AMP runs locally, src/test/webapp and src/test/resources will contain -->
                <!-- the location of the configuration files -->
                <execution>
                  <id>copy-alfresco-test-resources</id>
                  <phase>prepare-package</phase>
                  <goals>
                    <goal>copy-resources</goal>
                  </goals>
                  <configuration>
                    <outputDirectory>${alfresco.client.war.folder}</outputDirectory>
                    <resources>
                      <resource>
                        <directory>src/test/webapp</directory>
                      </resource>
                      <resource>
                        <directory>${project.build.testOutputDirectory}</directory>
                        <targetPath>WEB-INF/classes</targetPath>
                        <filtering>${app.filtering.enabled}</filtering>
                        <excludes>
                          <exclude>**/*.class</exclude>
                        </excludes>
                      </resource>
                      <resource>
                        <directory>src/test/properties/${env}</directory>
                        <filtering>${app.filtering.enabled}</filtering>
                        <targetPath>WEB-INF/classes</targetPath>
                      </resource>
                    </resources>
                  </configuration>
                </execution>

                <execution>
                  <id>copy-artifact-resource</id>
                  <phase>package</phase>
                  <goals>
                    <goal>copy-resources</goal>
                  </goals>
                  <configuration>
                    <outputDirectory>${alfresco.client.war.folder}</outputDirectory>
                    <resources>
                      <!-- if it's a JAR project this is the file that gets copied -->
                      <resource>
                        <directory>target</directory>
                        <targetPath>WEB-INF/lib</targetPath>
                        <includes>
                          <include>${project.build.finalName}.jar</include>
                        </includes>
                        <filtering>false</filtering>
                      </resource>

                      <!-- if it's an AMP project this is the file that gets copied -->
                      <resource>
                        <directory>target/${project.artifactId}-${project.version}/lib</directory>
                        <targetPath>WEB-INF/lib</targetPath>
                        <includes>
                          <include>${project.build.finalName}.jar</include>
                        </includes>
                        <filtering>false</filtering>
                      </resource>
                    </resources>
                  </configuration>
                </execution>

                <execution>
                  <id>copy-tomcat-resources</id>
                  <phase>prepare-package</phase>
                  <goals>
                    <goal>copy-resources</goal>
                  </goals>
                  <configuration>
                    <outputDirectory>${alfresco.client.war.folder}</outputDirectory>
                    <resources>
                      <resource>
                        <directory>tomcat</directory>
                        <filtering>${app.filtering.enabled}</filtering>
                        <targetPath>WEB-INF</targetPath>
                        <includes>
                          <include>context.xml</include>
                        </includes>
                      </resource>
                    </resources>
                  </configuration>
                </execution>
              </executions>
            </plugin>

            <!-- reserve network ports for tomcat -->
            <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>build-helper-maven-plugin</artifactId>
              <version>1.9.1</version>

              <configuration>
                <skip>${ft.skip}</skip>
              </configuration>

              <executions>
                <execution>
                  <id>reserve-network-port</id>
                  <goals>
                    <goal>reserve-network-port</goal>
                  </goals>
                  <phase>process-resources</phase>
                  <configuration>
                    <portNames>
                      <portName>cargo.servlet.port</portName>
                      <portName>cargo.rmi.port</portName>
                      <portName>cargo.tomcat.ajp.port</portName>
                    </portNames>
                  </configuration>
                </execution>
              </executions>
            </plugin>

            <!-- the cargo plugin launches the actual  -->
            <plugin>
              <groupId>org.codehaus.cargo</groupId>
              <artifactId>cargo-maven2-plugin</artifactId>
              <version>${maven.cargo.version}</version>
              <configuration>
                <skip>${ft.skip}</skip>

                <container>
                  <containerId>tomcat7x</containerId>
                  <artifactInstaller>
                    <groupId>org.apache.tomcat</groupId>
                    <artifactId>tomcat</artifactId>
                    <version>${cargo.tomcat.version}</version>
                  </artifactInstaller>
                  <log>${project.build.directory}/cargo.log</log>
                  <timeout>${cargo.container.timeout}</timeout>
                  <systemProperties>
                    <dir.root>${alfresco.data.location}</dir.root>
                  </systemProperties>
                  <dependencies>
                    <dependency>
                      <groupId>com.h2database</groupId>
                      <artifactId>h2</artifactId>
                    </dependency>
                    <dependency>
                      <groupId>tk.skuro.alfresco</groupId>
                      <artifactId>h2-support</artifactId>
                    </dependency>
                    <dependency>
                      <groupId>org.springframework</groupId>
                      <artifactId>spring-instrument-tomcat</artifactId>
                    </dependency>
                  </dependencies>
                </container>

                <deployables>
                  <deployable>
                    <!-- Override location to point to the exploded webapp. -->
                    <groupId>${alfresco.client.war.groupId}</groupId>
                    <artifactId>${alfresco.client.war}</artifactId>
                    <type>war</type>
                    <location>${alfresco.client.war.folder}</location>
                    <properties>
                      <context>alfresco</context>
                    </properties>
                  </deployable>
                </deployables>

                <configuration>
                  <home>${project.build.directory}/tomcat-home</home>
                  <properties>
                    <cargo.servlet.port>${cargo.servlet.port}</cargo.servlet.port>
                    <cargo.hostname>${tomcat.host}</cargo.hostname>
                    <cargo.rmi.port>${cargo.rmi.port}</cargo.rmi.port>
                    <cargo.tomcat.ajp.port>${cargo.tomcat.ajp.port}</cargo.tomcat.ajp.port>
                  </properties>
                </configuration>
              </configuration>

              <executions>
                <execution>
                  <id>start-tomcat</id>
                  <phase>pre-integration-test</phase>
                  <goals>
                    <goal>start</goal>
                  </goals>
                  <configuration>
                    <configuration>
                      <properties>
                        <cargo.jvmargs>${jacoco-ft.agent.arg} ${cargo.jvmargs.extra1} ${cargo.jvmargs.extra2}</cargo.jvmargs>
                      </properties>
                    </configuration>
                  </configuration>
                </execution>

                <execution>
                  <id>stop-tomcat</id>
                  <phase>post-integration-test</phase>
                  <goals>
                    <goal>stop</goal>
                  </goals>
                </execution>
              </executions>

              <dependencies>
                <dependency>
                  <groupId>org.codehaus.plexus</groupId>
                  <artifactId>plexus-archiver</artifactId>
                  <version>2.3</version>
                </dependency>
              </dependencies>
            </plugin>
          </plugins>
        </pluginManagement>

        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
          </plugin>

          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
          </plugin>

          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <executions>
              <execution>
                <id>start-tomcat</id>
              </execution>
              <execution>
                <id>stop-tomcat</id>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <skipTests>${ft.skip}</skipTests>
            </configuration>
            <executions>
              <execution>
                <id>functional-test</id>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <distributionManagement>
    <repository>
      <id>redpill-linpro-releases</id>
      <url>https://maven.redpill-linpro.com/nexus/content/repositories/releases</url>
    </repository>
    <snapshotRepository>
      <id>redpill-linpro-snapshots</id>
      <url>https://maven.redpill-linpro.com/nexus/content/repositories/snapshots</url>
    </snapshotRepository>
  </distributionManagement>

</project>
